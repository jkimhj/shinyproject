data(cars)
#1.1
ggplot(data=mpg, aes(x=speed, y=dist)) + geom_point()
library(ggplot2)
ggplot(data=mpg, aes(x=speed, y=dist)) + geom_point()
data(cars)
ggplot(data=mpg, aes(x=speed, y=dist)) + geom_point()
library(ggplot2)
data(cars)
ggplot(data=mpg, aes(x=speed, y=dist)) + geom_point()
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
#1.1
summary(temp)
dim(temp)
sd(temp$Body.Temp)
sd(temp$Heart.Rate)
cor(temp$Body.Temp, temp$Heart.Rate)
#1.2
ggplot(data=temp, aes(x=Body.Temp, y=Heart.Rate))+geom_point()
library(ggplot2)
library(dplyr)
ggplot(data=temp, aes(x=Body.Temp, y=Heart.Rate))+geom_point()
plot(density(temp$Body.Temp[temp$Gender == "Female"]), col = "pink")
geom_density(temp$Body.Temp[temp$Gender=="Female"])
t.test(temp$Body.Temp, my=98.6, conf.level = 0.95)
t.test(temp$Body.Temp, my=98.6, conf.level = 0.95, alternative = "two.sided")
library(rsconnect)
shiny::runApp('Documents/NYC_DSA/Project2_Childcare')
setAccountInfo(N = int(1e4)
np.random.seed(168)
X = np.random.rand(N)
X = np.array(sorted(X))
error = np.random.normal(0, 0.1, N))
setAccountInfo(rsconnect::setAccountInfo(name='juliekim', token='5662D4476389511DED3BD154FD626083', secret='ZElWcnH4jHk0JY8ceT196HD1fWuvSoj1yfcV3f7Z'))
rsconnect::setAccountInfo(name='juliekim', token='5662D4476389511DED3BD154FD626083', secret='ZElWcnH4jHk0JY8ceT196HD1fWuvSoj1yfcV3f7Z')
runApp('Documents/NYC_DSA/Project2_Childcare')
runApp('Documents/NYC_DSA/Project2_Childcare')
runApp('Documents/NYC_DSA/Project2_Childcare')
setAccountInfo(name='juliekim', token='5662D4476389511DED3BD154FD626083', secret='ZElWcnH4jHk0JY8ceT196HD1fWuvSoj1yfcV3f7Z')
runApp('Documents/NYC_DSA/Project2_Childcare')
install.packages("sm")
library(sm)
runApp('Documents/NYC_DSA/Project2_Childcare')
install.packages("rsconnect")
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='juliekim', token='5662D4476389511DED3BD154FD626083', secret='ZElWcnH4jHk0JY8ceT196HD1fWuvSoj1yfcV3f7Z')
shiny::runApp('Documents/NYC_DSA/Project2_Childcare')
library(sm)
install.packages("sm")
library(sm)
library(sm)
install.packages("sm")
library(sm)
library(clisymbols)
library(sm)
install.packages("sm")
library(sm)
Sys.getenv("R_LIBS_USER")
remove.packages("sm")
install.packages("sm")
library(sm)
install.packages("sm")
library(sm)
install.packages("sm")
library(sm)
.libPaths( c( .libPaths(), "~/userLibrary") )
I generally try to keep all of my packages in one library, but if you want to add a library why not append the new library to the existing library:
.libPaths( c( .libPaths(), "~/userLibrary") )
Then I get:
> .libPaths()
.libPaths()
install.packages("sm")
install.packages("sm")
install.packages("sm")
.libPaths()
.libPaths(c("/Library/Frameworks/R.framework/Versions/3.5/Resources/library", .libPaths()))
.libPaths()
install.packages("sm")
setwd("~/Documents/NYC_DSA/Project2_Childcare")
library(sm)
boxplot(viol1, viol2, viol3, viol4, viol5,
names=c("BRONX", "BROOKLYN", "MANHATTAN", "QUEENS", "STATEN ISLAND"),
col="green")
title("Box plots of Violation Rate Percent by Borough",
xlab = "Borough", ylab="Rate (%)")
boxplot(viol1, viol2, viol3, viol4, viol5,
names=c("BRONX", "BROOKLYN", "MANHATTAN", "QUEENS", "STATEN ISLAND"),
col="green")
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
library(shinydashboard)
library(plotly)
library(DT)
library(googleVis)
library(reshape)
library(reshape2)
library(leaflet)
library(zipcode)
library(data.table)
library(vioplot)
data = read.csv("DOHMH_Childcare_Center_Inspections.csv", stringsAsFactors = FALSE)
data = as.data.frame(data)
names(data) <- tolower(names(data))
data = data %>% group_by(day.care.id) %>% arrange(day.care.id)
center_table = select(data, day.care.id, center.name, borough, zipcode, maximum.capacity,
program.type, facility.type, violation.rate.percent,
total.educational.workers, public.health.hazard.violation.rate,
critical.violation.rate)
center_table = center_table %>% filter(!is.na(violation.rate.percent), !is.na(public.health.hazard.violation.rate),
!is.na(critical.violation.rate), !is.na(zipcode), !is.na(maximum.capacity),
!is.na(facility.type),!is.na(program.type), !is.na(total.educational.workers))
center_table$facility.type = toupper(center_table$facility.type)
center_table = unique(center_table)
viol_rate = center_table$violation.rate.percent
phh_rate = center_table$public.health.hazard.violation.rate
crit_rate = center_table$critical.violation.rate
viol1 = center_table$violation.rate.percent[center_table$borough=="BRONX"]
viol2 = center_table$violation.rate.percent[center_table$borough=="BROOKLYN"]
viol3 = center_table$violation.rate.percent[center_table$borough=="MANHATTAN"]
viol4 = center_table$violation.rate.percent[center_table$borough=="QUEENS"]
viol5 = center_table$violation.rate.percent[center_table$borough=="STATEN ISLAND"]
boxplot(viol1, viol2, viol3, viol4, viol5,
names=c("BRONX", "BROOKLYN", "MANHATTAN", "QUEENS", "STATEN ISLAND"),
col="green")
title("Box plots of Violation Rate Percent by Borough",
xlab = "Borough", ylab="Rate (%)")
runApp()
library(sm)
install.packages("sm")
library(sm)
boxplot(phh1, phh2, phh3, phh4, phh5,
names=c("BRONX", "BROOKLYN", "MANHATTAN", "QUEENS", "STATEN ISLAND"),
col="green")
title("Box plots of Public Health Hazard Violation Rate by Borough",
xlab = "Borough", ylab="Rate (%)")
phh1 = center_table$public.health.hazard.violation.rate[center_table$borough=="BRONX"]
phh2 = center_table$public.health.hazard.violation.rate[center_table$borough=="BROOKLYN"]
phh3 = center_table$public.health.hazard.violation.rate[center_table$borough=="MANHATTAN"]
phh4 = center_table$public.health.hazard.violation.rate[center_table$borough=="QUEENS"]
phh5 = center_table$public.health.hazard.violation.rate[center_table$borough=="STATEN ISLAND"]
boxplot(phh1, phh2, phh3, phh4, phh5,
names=c("BRONX", "BROOKLYN", "MANHATTAN", "QUEENS", "STATEN ISLAND"),
col="green")
title("Box plots of Public Health Hazard Violation Rate by Borough",
xlab = "Borough", ylab="Rate (%)")
crit1 = center_table$critical.violation.rate[center_table$borough=="BRONX"]
crit2 = center_table$critical.violation.rate[center_table$borough=="BROOKLYN"]
crit3 = center_table$critical.violation.rate[center_table$borough=="MANHATTAN"]
crit4 = center_table$critical.violation.rate[center_table$borough=="QUEENS"]
crit5 = center_table$critical.violation.rate[center_table$borough=="STATEN ISLAND"]
boxplot(crit1, crit2, crit3, crit4, crit5,
names=c("BRONX", "BROOKLYN", "MANHATTAN", "QUEENS", "STATEN ISLAND"),
col="blue")
title("Box plots of Critical Violation Rate by Borough",
xlab = "Borough", ylab="Rate (%)")
#####Tukey's Honestly Significant Differences #######
TukeyHSD(model1, conf.level = 0.99)
model1<- aov(center_table$violation.rate.percent~center_table$borough)
model2<- aov(center_table$public.health.hazard.violation.rate~center_table$borough)
model3<- aov(center_table$critical.violation.rate~center_table$borough)
#####Tukey's Honestly Significant Differences #######
TukeyHSD(model1, conf.level = 0.99)
plot(TukeyHSD(model1, conf.level = 0.99),las=1, col = "green")
plot(TukeyHSD(model2, conf.level = 0.99),las=1, col = "red")
plot(TukeyHSD(model3, conf.level = 0.99),las=1, col = "blue")
